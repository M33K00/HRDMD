<%- include('../layouts/hrislayout') -%>
<body>
  <%- include('../layouts/navhris') -%>
  <% if (user.hrrole !== "ADMIN") { -%>
    <%- include('../layouts/user_hris/sidenavhris_user') %>
  <% } else { -%>
    <%- include('../layouts/sidenavhris') %>
  <% } -%>
  <%- include('../layouts/footer') %>
  <div class="page-body fade-in">
    <div class="page-name">
      <h1>Attendance Record:</h1>
      <a href="/dtr" class="btn btn-secondary">Go Back</a>
    </div>
    <div id="alertContainer" class="bottom-right slide-up">
      <% if (message) { %>
      <div
        class="alert alert-dismissible alert-<%= message.type %> fade show"
        role="alert"
        id="autoDismissAlert"
      >
      <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>Attention!</strong> <%= message.message %><a
          href="#"
          class="alert-link"
        ></a>
      </div>
      <% } %>
    </div>
    <div class="account-at">
      <div class="account-img">
        <% if (logincollections.image === "") { %>
          <img src="../images/user.jpg" />
          <% } else { %>
          <img src="../<%= logincollections.image %>" />
      <% } %>
      </div>
      <div class="account-in mt-3 text">
        <p><b>Name:</b> <%= logincollections.name %></p>
        <p><b>Email:</b> <%= logincollections.email %></p>
        <p><b>Emp. Status:</b> <%= logincollections.empStatus %></p>
        <p><b>Department:</b> <% if (logincollections.department === 'HR Department') { %>
         HR Department <% } else if (logincollections.department === 'Department 1') { %>
         PESO Department <% } else if (logincollections.department === 'Department 2') { %>
         CCD Office <% } else if (logincollections.department === 'Department 3') { %>
         OAS Department <% } else if (logincollections.department === 'Department 4') { %>
         BTM Department <% } else if (logincollections.department === 'Department 5') { %>
         BPL Department <% } else if (logincollections.department === 'Department 6') { %>
          CAD Department
        <% } %></p>
        <p><b>Position:</b> <% if (logincollections.hrrole === "ROLE 1") { %> Administrative Officer <% }
          else if (logincollections.hrrole === "ROLE 2") { %> Senior Admin Assistant <% }
          else if (logincollections.hrrole === "ROLE 3") { %> Admin Officer <% } else if
          (logincollections.hrrole === "ROLE 4") { %> Admin Assistant <% } else if
          (logincollections.hrrole === "ROLE 5") { %> Admin Aide <% } else if (logincollections.hrrole
          === "ADMIN") { %> Department Head <% } %></p>
      </div>
      <div class="account-stat mt-3">
        <div class="account-stat-item">
            <p><b>Days Present:</b> <%= attendance.daysPresent %></p></p>
            <p><b>Days Absent:</b> <%= attendance.daysAbsent %></p>
            <p><b>Days On Leave:</b> <%= attendance.daysOnLeave %></p>
            <p class="<% if (VLPoints >= 1.25) { %>
                      text-success
                  <% } else if (VLPoints <= 1.24 && VLPoints >= 1.00) { %>
                      text-warning
                  <% } else if (VLPoints > 0.01 && VLPoints <= 0.99) { %>
                      text-danger
                  <% } else { %>
                      text-danger
                <% } %>"><b style="color: rgb(0, 0, 0);">VL Points:</b> <%= VLPoints %></p>
            <p class="<% if (SLPoints >= 1.25) { %>
                 text-success
                <% } else if (SLPoints <= 1.24 && SLPoints >= 1.00 ) { %>
                text-warning
                <% } else if (SLPoints <= 0.01 && SLPoints >= 0.99 ) { %>
                text-danger
                <% } else { %>
                text-danger
                <% } %>"><b style="color: rgb(0, 0, 0);">SL Points:</b> <%= SLPoints %></p>
        </div>
    </div>
    <div class="account-stat mt-3">
      <div class="account-stat-item">
        <%
              const startTimeParts = hrSettings.startTime.split(":");
              const endTimeParts = hrSettings.endTime.split(":");
              const startHour = parseInt(startTimeParts[0]);
              const endHour = parseInt(endTimeParts[0]);
              const startMinutes = parseInt(startTimeParts[1]);
              const endMinutes = parseInt(endTimeParts[1]);

              // Create Date objects with dummy date (since we only care about time)
              const startDate = new Date(2000, 0, 1, startHour, startMinutes);
              const endDate = new Date(2000, 0, 1, endHour, endMinutes);

              // Format the times in AM/PM format
              const formattedStartTime = startDate.toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit', hour12: true });
              const formattedEndTime = endDate.toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit', hour12: true });
              %>
          <p><b>Dayoffs:</b> <%= attendance.dayOff %></p></p>
          <p><b>Cut-off Dates:</b> Every <%= hrSettings.startDate %> and <%= hrSettings.endDate %></p>
          <p><b>Shift Start:</b> <%= formattedStartTime %></p>
          <p><b>Shift End:</b> <%= formattedEndTime %></p>
      </div>
    </div>
  </div>
  <div class="mt-4">
    <div class="account-column-2">
        <h3>Daily Time Record:</h3>
        <div class="status-icon">
          <b>STATUS:</b> <% if (attendance.status === 'IN') { %>
            <span class="green-dot"></span>
            <% } else if (attendance.status === 'OUT') { %>
            <span class="red-dot"></span>
            <% } %><%= attendance.status %>
        </div>
    </div>
    <div class="clockin-tab">
      <p><%= getCurrentDateInWords() %></p>
      <div class="clockin-btn">
        <a href="/m-absent/<%= logincollections.id %>" class="btn btn-danger <% if (status === 'Absent' || attendance.status === 'IN' || logincollections.email === user.email) { %>disabled<% } %>"
          style="margin-right: 10px;">Mark as Absent</a>
      </div>
    </div>
    <ul class="nav nav-tabs" role="tablist">
        <li class="nav-item" role="presentation">
          <a class="nav-link text-uppercase active nav-first" data-bs-toggle="tab" href="#hw" aria-selected="true" role="tab">Hours Worked</a>
        </li>
        <li class="nav-item" role="presentation">
          <a class="nav-link" data-bs-toggle="tab" href="#dp" aria-selected="false" tabindex="-1" role="tab">Days Present</a>
        </li>
        <li class="nav-item" role="presentation">
          <a class="nav-link" data-bs-toggle="tab" href="#da" aria-selected="false" tabindex="-1" role="tab">Days Absent</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" data-bs-toggle="tab" href="#dol" aria-selected="false" tabindex="-1" role="tab">Days on Leave</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" data-bs-toggle="tab" href="#dpA" aria-selected="false" tabindex="-1" role="tab">Attendance History</a>
        </li>
      </ul>
      <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade show active" id="hw" role="tabpanel">
          <h4 class="mt-4">Record Today:</h4>
          <p class="text-muted">This is the total hours worked today.</p>
          <div class="dtr-view-container">
            <div class="dtr-view-div">
              <div class="div-title">
                <p class="dtr-view-title">Total Today:</p>
              </div>
              <div class="div-view-count" id="attendance-status">
                <% if (attendance.status === 'OUT' && status === 'Absent') { %>
                  ABSENT
                <% } else if (attendance.timeIn !== null && status === 'Present') { %>
                  <span id="time-elapsed">
                    <%= totalHours %> hours and <%= totalMinutes %> minutes
                  </span>
                <% } else { %>
                  N/A
                <% } %>
              </div>
            </div>
            <div class="dtr-view-div">
              <div class="div-title">
                <p class="dtr-view-title">Clocked In:</p>
              </div>
              <div class="div-view-count"><% if (attendance.timeIn !== null) { %>
                <%= attendance.timeIn.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %>
                <% } else if (status === 'Absent'){ %> 
                ABSENT
                <% } else { %>
                Not Clocked In
              <% } %></div>
            </div>
          </div>
          <h4 class="mt-4">Total Hours Worked:</h4>
          <p class="text-muted">This is the total hours worked before the cutoff and all time record.</p>
          <div class="dtr-view-container">
            <div class="dtr-view-div">
              <div class="div-title">
                <p class="dtr-view-title">Total Hours Worked:</p>
              </div>
              <div class="div-view-count"><%= attendance.hoursWorked.toFixed(2) %> Hour(s)</div>
            </div>
            <div class="dtr-view-div">
              <div class="div-title">
                <p class="dtr-view-title">All Time Record:</p>
              </div>
              <div class="div-view-count"><%= (attendance.hoursWorked + attendance.allTimeRecord).toFixed(2) %> Hour(s)</div>
            </div>
          </div>
        </div>
        <div class="tab-pane fade" id="dp" role="tabpanel">
          <h4 class="mt-4">Days Present (BEFORE CUTOFF):</h4>
          <p class="text-muted">This table shows the days present before the cutoff.</p>
          <table id="table" class="table table-hover table-striped table-bordered mt-4">
            <thead>
              <% if (dayspresent != '') { %>
                <tr class="table-dark text-center text-uppercase">
                  <th>Date</th>
                  <th>Time Late</th>
                  <th>Time In</th>
                  <th>Time Out</th>
                  <th>Total Time</th>
                  <th>Undertime</th>
                  <th>Overtime</th>
                </tr>
              </thead>
              <tbody>
                <% // Sort dayspresent array by date (from latest to oldest)
                dayspresent.sort((a, b) => new Date(b.date) - new Date(a.date));
        
                // Render sorted rows
                dayspresent.forEach((row, index) => { %>
              <tr>
                <td><%= row.date.toISOString().slice(0, 10) %></td>
                <td><%= row.timeLate.split(":")[0] %>h and <%= row.timeLate.split(":")[1] %>m</td>
                <td><%= row.timeIn.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %></td>
                <td><% if (row.timeOut !== null) { %><%= row.timeOut.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %><% } else { %>Ongoing<% } %></td>
                <td><%= row.totalTime.toFixed(2) %></td>
                <td><%= row.underTime.toFixed(2) %></td>
                <td><%= row.overTime.toFixed(2) %></td>
              </tr>
                  <% }) %>
              </tbody>
              <% } else { %>
                <h1 class="text-center text-secondary mt-5">
                  No record found before cutoff
                </h1>
              <% } %>
          </table>
        </div>
        <div class="tab-pane fade" id="da" role="tabpanel">
          <h4 class="mt-4">Days Absent:</h4>
          <p class="text-muted">This table shows the days absent.</p>
          <table id="table" class="table table-hover table-striped table-bordered mt-4">
            <thead>
              <% if (daysabsent != '') { %>
                <tr class="table-dark text-center text-uppercase">
                  <th>Date</th>
                  <th>Day</th>
                </tr>
              </thead>
              <tbody>
                <% // Sort daysabsent array by date (from latest to oldest)
                daysabsent.sort((a, b) => new Date(b.date) - new Date(a.date));

                const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

                daysabsent.forEach((row, index) => { %>
                  <tr class="text-center">
                    <td><%= row.date.toISOString().slice(0, 10) %></td>
                    <td><%= daysOfWeek[row.date.getDay()] %></td>
                  </tr>
                  <% }) %>
              <% } else { %>
                <h1 class="text-center text-secondary mt-5">
                  No Days Absent Found
                </h1>
              <% } %>
          </table>
        </div>
        <div class="tab-pane fade" id="dol" role="tabpanel">
          <h4 class="mt-4">Days on Leave:</h4>
          <p class="text-muted">This table shows the days on leave.</p>
          <table id="table" class="table table-hover table-striped table-bordered mt-4">
            <thead>
              <% if (leaveapplications != '') { %>
                <tr class="table-dark text-center text-uppercase">
                  <th>Start Date</th>
                  <th>End Date</th>
                  <th>Appproved Date</th>
                </tr>
              </thead>
              <tbody>
                <% // Sort leaveapplications array by date (from latest to oldest)
                leaveapplications.sort((a, b) => new Date(b.startDate) - new Date(a.startDate));

                leaveapplications.forEach((row, index) => { %>
                  <tr class="text-center">
                    <td><%= row.StartDate.toISOString().slice(0, 10) %></td>
                    <td><%= row.EndDate.toISOString().slice(0, 10) %></td>
                    <td><%= row.AppliedDate.toISOString().slice(0, 10) %></td>
                  </tr>
                  <% }) %>
              <% } else { %>
                <h1 class="text-center text-secondary mt-5">
                  No Days on Leave Found
                </h1>
              <% } %>
          </table>
        </div>
        <div class="tab-pane fade" id="dpA" role="tabpanel">
          <h4 class="mt-4">Attendance History:</h4>
          <p class="text-muted">This table shows the attendance history.</p>
          <table id="table" class="table table-hover table-striped table-bordered mt-4">
            <thead>
              <% if (dayspresentA != '') { %>
                <tr class="table-dark text-center text-uppercase">
                  <th>Date</th>
                  <th>Time In</th>
                  <th>Time Out</th>
                  <th>Total Time</th>
                  <th>Under Time</th>
                  <th>Over Time</th>
                </tr>
              </thead>
              <tbody>
                <% // Sort attendancehistory array by date (from latest to oldest)
                dayspresentA.sort((a, b) => new Date(b.date) - new Date(a.date));
                dayspresentA.forEach((row, index) => { %>
                  <tr>
                    <td><%= row.date.toISOString().slice(0, 10) %></td>
                <td><%= row.timeIn.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %></td>
                <td><% if (row.timeOut !== null) { %><%= row.timeOut.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %><% } else { %>Ongoing<% } %></td>
                <td><%= row.totalTime.toFixed(2) %></td>
                <td><%= row.underTime.toFixed(2) %></td>
                <td><%= row.overTime.toFixed(2) %></td>
              </tr>
                  <% }) %>
              <% } else { %>
                <h1 class="text-center text-secondary mt-5">
                  No Attendance History Found
                </h1>
              <% } %>
          </table>
        </div>
  </div>
</body>
<% function getCurrentDateInWords() { const months = ['January', 'February',
  'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October',
  'November', 'December']; const days = ['Sunday', 'Monday', 'Tuesday',
  'Wednesday', 'Thursday', 'Friday', 'Saturday']; const currentDate = new
  Date(); const dayOfWeek = days[currentDate.getDay()]; const month =
  months[currentDate.getMonth()]; const dayOfMonth = currentDate.getDate();
  const year = currentDate.getFullYear(); return `${dayOfWeek}, ${month}
  ${dayOfMonth}, ${year}`; } %>